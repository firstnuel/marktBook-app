paths:
  /products:
    post:
      summary: Create a new product
      description: Endpoint to create a new product under a business.
      tags:
        - Inventory
      security:
        - bearerAuth: []
      requestBody:
        description: Details of the product to be created.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - sku
                - productName
                - currency
                - businessId
                - basePrice
              properties:
                sku:
                  type: string
                  example: PRD18347
                productName:
                  type: string
                  example: Bluetooth Speaker
                currency:
                  type: string
                  description: Currency of the product's price.
                  example: NGN
                businessId:
                  type: string
                  description: The ID of the business to associate the product with.
                  example: 67597971222a047c50cb8e75
                longDescription:
                  type: string
                  description: Detailed description of the product.
                  example: Portable Bluetooth speaker with deep bass and 10-hour battery life.
                shortDescription:
                  type: string
                  description: Brief description of the product.
                  example: Compact Bluetooth speaker with powerful sound.
                productCategory:
                  type: string
                  description: The category of the product.
                  example: Electronics
                productType:
                  type: string
                  description: The type of the product (e.g., Physical or Digital).
                  example: Physical
                barcode:
                  type: string
                  description: Barcode of the product.
                  example: 9876543210987
                productVariants:
                  type: array
                  items:
                    type: object
                  description: Variants of the product (e.g., color, size).
                basePrice:
                  type: number
                  description: Base price of the product.
                  example: 75.0
                salePrice:
                  type: number
                  description: Sale price of the product (optional).
                  example: 60.0
                discount:
                  type: number
                  description: Discount percentage applied to the product (optional).
                  example: 15.0
                unit:
                  type: string
                  description: Unit of measurement for the product.
                  example: piece
                tags:
                  type: array
                  items:
                    type: string
                  description: Tags associated with the product.
                  example: ["bluetooth", "audio", "speaker"]
                supplierId:
                  type: string
                  description: ID of the supplier (optional).
                  example: null
                productImages:
                  type: array
                  items:
                    type: object
                    properties:
                      url:
                        type: string
                        description: URL of the product image.
                        example: base64-encoded-image or remove productImages field!
                      isPrimary:
                        type: boolean
                        description: Indicates if the image is the primary one.
                        example: true
                isActive:
                  type: boolean
                  description: Indicates if the product is active (optional).
                  example: true
      responses:
        '201':
          description: Product created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Product 'Bluetooth Speaker' created successfully
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                      stockId:
                        type: string
                        nullable: true
                      sku:
                        type: string
                      currency:
                        type: string
                      productName:
                        type: string
                      businessId:
                        type: string
                      longDescription:
                        type: string
                        nullable: true
                      shortDescription:
                        type: string
                        nullable: true
                      productCategory:
                        type: string
                      productImages:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                            isPrimary:
                              type: boolean
                      productType:
                        type: string
                      barcode:
                        type: string
                        nullable: true
                      productVariants:
                        type: array
                        items:
                          type: object
                      basePrice:
                        type: number
                      salePrice:
                        type: number
                      unit:
                        type: string
                      tags:
                        type: array
                        items:
                          type: string
                      discount:
                        type: number
                      isActive:
                        type: boolean
                      supplierId:
                        type: string
                        nullable: true
                      createdBy:
                        type: string
                      updatedBy:
                        type: string
                  status:
                    type: string
                    example: success
        '400':
          description: Validation Error or Bad Request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    examples:
                      - Validation failed
                      - Invalid Business: business not found
        '401':
          description: Unauthorized - User not authenticated or not authorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid User
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to process product creation. Please try again.
    /products:
    get:
      summary: Retrieve all products
      description: Endpoint to retrieve all products associated with the authenticated user's business.
      tags:
        - Inventory
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved products.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Products data fetched successfully
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized - User not authenticated or not authorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid User
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to retrieve products. Please try again.

  /products/categories/{category}:
    get:
      summary: Retrieve products by category
      description: Endpoint to retrieve products filtered by a specific category under the authenticated user's business.
      tags:
        - Inventory
      security:
        - bearerAuth: []
      parameters:
        - name: category
          in: path
          required: true
          description: The category of the products to retrieve.
          schema:
            type: string
            example: Electronics
      responses:
        '200':
          description: Successfully retrieved products for the specified category.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Products data fetched successfully
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '400':
          description: Validation Error or Bad Request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    examples:
                      - Validation failed
        '401':
          description: Unauthorized - User not authenticated or not authorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid User
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to retrieve products by category. Please try again.

  /products/search:
    get:
      summary: Search for products
      description: Endpoint to search for products based on name, SKU, barcode, or tags under the authenticated user's business.
      tags:
        - Inventory
      security:
        - bearerAuth: []
      parameters:
        - name: name
          in: query
          required: false
          description: Name of the product to search for.
          schema:
            type: string
            example: Speaker
        - name: sku
          in: query
          required: false
          description: SKU of the product to search for.
          schema:
            type: string
            example: PRD18347
        - name: barcode
          in: query
          required: false
          description: Barcode of the product to search for.
          schema:
            type: string
            example: 9876543210987
        - name: tags
          in: query
          required: false
          description: Tags associated with the products to search for (comma-separated).
          schema:
            type: string
            example: bluetooth,audio,speaker
      responses:
        '200':
          description: Successfully retrieved search results.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Products data fetched successfully
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '400':
          description: Validation Error or Bad Request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    examples:
                      - Validation failed
        '401':
          description: Unauthorized - User not authenticated or not authorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid User
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to search products. Please try again.

  /products/{productId}:
    get:
      summary: Retrieve a single product by ID
      description: Endpoint to retrieve detailed information about a specific product by its ID under the authenticated user's business.
      tags:
        - Inventory
      security:
        - bearerAuth: []
      parameters:
        - name: productId
          in: path
          required: true
          description: The unique identifier of the product to retrieve.
          schema:
            type: string
            example: 60d21b4667d0d8992e610c85
      responses:
        '200':
          description: Successfully retrieved the product.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Products data fetched successfully
                  data:
                    $ref: '#/components/schemas/Product'
        '400':
          description: Validation Error or Bad Request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    examples:
                      - Validation failed
                      - Invalid Product ID
        '401':
          description: Unauthorized - User not authenticated or not authorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid User
        '404':
          description: Product not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No product found
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to retrieve the product. Please try again.
    /products/{productId}:
    patch:
      summary: Edit a product
      description: Endpoint to update product details based on the user's role and permissions.
      tags:
        - Inventory
      security:
        - bearerAuth: []
      parameters:
        - name: productId
          in: path
          required: true
          description: The unique identifier of the product to update.
          schema:
            type: string
            example: 60d21b4667d0d8992e610c85
      requestBody:
        description: Updated details of the product.
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                productName: Updated Bluetooth Speaker
                basePrice: 80.0
                salePrice: 70.0
                tags: ["audio", "wireless"]
      responses:
        '200':
          description: Product updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Product updated successfully
                  data:
                    $ref: '#/components/schemas/Product'
        '400':
          description: Validation Error or Bad Request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Validation failed
        '401':
          description: Unauthorized - User not authenticated or authorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid User
        '404':
          description: Product not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Product not found
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to update product. Please try again.

    delete:
      summary: Delete a product
      description: Endpoint to delete a specific product by ID. Only accessible to users with 'Owner' or 'Manager' roles.
      tags:
        - Inventory
      security:
        - bearerAuth: []
      parameters:
        - name: productId
          in: path
          required: true
          description: The unique identifier of the product to delete.
          schema:
            type: string
            example: 60d21b4667d0d8992e610c85
      responses:
        '200':
          description: Product deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Product deleted successfully
        '401':
          description: Unauthorized - User not authenticated or not authorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid User
        '404':
          description: Product not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Product not found
        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to delete product. Please try again.

