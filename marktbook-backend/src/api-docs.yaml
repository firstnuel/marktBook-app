openapi: 3.0.0
info:
  title: marktBook API
  version: 1.0.0
servers:
  - url: http://localhost:5001/api/v1
paths:
  /register:
    post:
      summary: Register a new business and owner
      description: Endpoint for business and owner registration with comprehensive details
      tags:
        - Authentication
      requestBody:
        description: Business and owner registration details
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - businessName
                - username
                - businessLogo
                - adminFullName
                - businessAddress
                - businessType
                - businessCategory
              properties:
                email:
                  type: string
                  format: email
                  example: business@example.com
                password:
                  type: string
                  format: password
                  example: secure_password_123
                businessName:
                  type: string
                  example: My Awesome Business
                username:
                  type: string
                  example: new_admin
                businessLogo:
                  type: string
                  format: binary
                  description: Base64 encoded image or file upload
                  example: base64-encoded-image or remove this field!
                adminFullName:
                  type: string
                  example: John Doe
                businessAddress:
                  type: string
                  example: 123 Business Street, City, Country
                businessType:
                  type: string
                  example: Retail
                businessCategory:
                  type: string
                  example: Electronics
      responses:
        '201':
          description: Business and user account created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Business account and user created successfully
                  data:
                    type: object
                    properties:
                      businessName:
                        type: string
                      businessType:
                        type: string
                      businessCategory:
                        type: string
                      businessAddress:
                        type: string
                  token:
                    type: string
                    description: JWT authentication token
        '400':
          description: Bad Request - Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    examples:
                      - Business with this name or email already exists
                      - Invalid business logo
                      - Validation failed
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to process registration. Please try again.
  /forgot-password:
    post:
      summary: Forgot Password
      description: Generate a password reset token and send a reset link to the user's email.
      tags:
        - Authentication
      requestBody:
        description: Email address to generate password reset link.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address.
                  example: user@example.com
      responses:
        '200':
          description: Password reset email sent successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password reset email sent.
        '400':
          description: Bad Request - Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    examples:
                      - Invalid email address
                      - User not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
  /reset-password/{token}:
    post:
      summary: Reset Password
      description: Update the user's password using a valid reset token.
      tags:
        - Authentication
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
          description: Password reset token.
      requestBody:
        description: New password details.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
                - confirmPassword
              properties:
                password:
                  type: string
                  format: password
                  description: New password for the account.
                  example: new_secure_password_123
                confirmPassword:
                  type: string
                  format: password
                  description: Confirmation of the new password.
                  example: new_secure_password_123
      responses:
        '200':
          description: Password updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password updated successfully.
        '400':
          description: Bad Request - Validation Error or Invalid Token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    examples:
                      - Validation failed
                      - Reset token is expired or invalid
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
  /login:
    post:
      summary: User Login
      description: Authenticate user with business email, username and password
      tags:
        - Authentication
      requestBody:
        description: User login credentials
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address (optional if username provided)
                  example: user@example.com
                username:
                  type: string
                  description: Username (optional if email provided)
                  example: johndoe
                password:
                  type: string
                  format: password
                  example: secure_password_123
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: user login successful
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        description: User's unique identifier
                      name:
                        type: string
                        description: User's full name
                      email:
                        type: string
                        description: User's email address
                      username:
                        type: string
                        description: User's username
                      role:
                        type: string
                        description: User's role in the system
                      status:
                        type: string
                        description: User's account status
                      associatedBusinesses:
                        type: array
                        items:
                          type: object
                          properties:
                            businessId:
                              type: string
                            businessName:
                              type: string
                            role:
                              type: string
                  token:
                    type: string
                    description: JWT authentication token
        '400':
          description: Authentication Failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    examples:
                      - invalid credentials, user not found
                      - invalid credentials, password not correct
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
  /currentuser:
    get:
      summary: Get Current User
      description: Retrieve details of the currently authenticated user
      tags:
        - Authentication
      responses:
        '200':
          description: Successfully retrieved user details
          content:
            application/json:
              schema:
                type: object
                properties:
                  isUser:
                    type: boolean
                    description: Whether a valid user is authenticated
                    example: true
                  token:
                    type: string
                    description: JWT token of the authenticated user
                    example: "some_jwt_token"
                  user:
                    type: object
                    description: User details excluding sensitive fields
                    properties:
                      _id:
                        type: string
                        description: User's unique identifier
                      uId:
                        type: string
                        description: User's cache unique identifier
                      name:
                        type: string
                        description: User's full name
                      email:
                        type: string
                        description: User's email address
                      username:
                        type: string
                        description: User's username
                      role:
                        type: string
                        description: User's role in the system
                      nin:
                        type: string
                        description: User's National Identification Number
                      associatedBusinesses:
                        type: array
                        items:
                          type: object
                          properties:
                            businessId:
                              type: string
                            businessName:
                              type: string
                            role:
                              type: string
        '401':
          description: Unauthorized - User not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Token not available, please login"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to retrieve user details due to server error
